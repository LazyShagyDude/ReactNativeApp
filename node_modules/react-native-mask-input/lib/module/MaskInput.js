function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from 'react';
import { TextInput } from 'react-native';
import useMaskedInputProps from './useMaskedInputProps';
export default /*#__PURE__*/React.forwardRef(function (props, ref) {
  const {
    mask,
    value,
    onChangeText,
    placeholderFillCharacter = '_',
    obfuscationCharacter,
    showObfuscatedValue,
    selection,
    maskAutoComplete,
    ...rest
  } = props;
  const maskedInputProps = useMaskedInputProps({
    value,
    mask,
    maskAutoComplete,
    obfuscationCharacter,
    onChangeText,
    placeholderFillCharacter,
    showObfuscatedValue
  });
  return /*#__PURE__*/React.createElement(TextInput, _extends({
    placeholder: maskedInputProps.placeholder
  }, rest, {
    selection: maskedInputProps.selection || selection,
    value: maskedInputProps.value,
    onChangeText: maskedInputProps.onChangeText,
    ref: ref
  }));
});
//# sourceMappingURL=MaskInput.js.map